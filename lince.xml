<?xml version="1.0" encoding="UTF-8"?>
<project name="lince" default="all">
  
  
  <property file="lince.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.ear"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.swc"/>
    <include name="*.ane"/>
    <include name="*.egg"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.6_(1)" value="${jdk.home.1.6_(1)}/bin"/>
  <path id="jdk.classpath.1.6_(1)">
    <fileset dir="${jdk.home.1.6_(1)}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunmscapi.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.6_(1)}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.6_(1)}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.6_(1)"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.maven:_com.healthmarketscience.jackcess:jackcess:1.2.13.classpath">
    <pathelement location="${path.variable.maven_repository}/com/healthmarketscience/jackcess/jackcess/1.2.13/jackcess-1.2.13.jar"/>
  </path>
  
  <path id="library.maven:_commons-collections:commons-collections:3.0.classpath">
    <pathelement location="${path.variable.maven_repository}/commons-collections/commons-collections/3.0/commons-collections-3.0.jar"/>
  </path>
  
  <path id="library.maven:_commons-lang:commons-lang:2.0.classpath">
    <pathelement location="${path.variable.maven_repository}/commons-lang/commons-lang/2.0/commons-lang-2.0.jar"/>
  </path>
  
  <path id="library.maven:_commons-logging:commons-logging:1.0.3.classpath">
    <pathelement location="${path.variable.maven_repository}/commons-logging/commons-logging/1.0.3/commons-logging-1.0.3.jar"/>
  </path>
  
  <path id="library.maven:_de.bwaldvogel:liblinear:1.95.classpath">
    <pathelement location="${path.variable.maven_repository}/de/bwaldvogel/liblinear/1.95/liblinear-1.95.jar"/>
  </path>
  
  <path id="library.maven:_junit:junit:4.12.classpath">
    <pathelement location="${path.variable.maven_repository}/junit/junit/4.12/junit-4.12.jar"/>
  </path>
  
  <path id="library.maven:_log4j:log4j:1.2.17.classpath">
    <pathelement location="${path.variable.maven_repository}/log4j/log4j/1.2.17/log4j-1.2.17.jar"/>
  </path>
  
  <path id="library.maven:_net.java.dev.jna:jna:3.5.2.classpath">
    <pathelement location="${path.variable.maven_repository}/net/java/dev/jna/jna/3.5.2/jna-3.5.2.jar"/>
  </path>
  
  <path id="library.maven:_net.java.dev.jna:platform:3.5.2.classpath">
    <pathelement location="${path.variable.maven_repository}/net/java/dev/jna/platform/3.5.2/platform-3.5.2.jar"/>
  </path>
  
  <path id="library.maven:_org.easytesting:fest-assert:1.4.classpath">
    <pathelement location="${path.variable.maven_repository}/org/easytesting/fest-assert/1.4/fest-assert-1.4.jar"/>
  </path>
  
  <path id="library.maven:_org.easytesting:fest-util:1.1.6.classpath">
    <pathelement location="${path.variable.maven_repository}/org/easytesting/fest-util/1.1.6/fest-util-1.1.6.jar"/>
  </path>
  
  <path id="library.maven:_org.hamcrest:hamcrest-core:1.3.classpath">
    <pathelement location="${path.variable.maven_repository}/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar"/>
  </path>
  
  <path id="library.maven:_org.javassist:javassist:3.18.2-ga.classpath">
    <pathelement location="${path.variable.maven_repository}/org/javassist/javassist/3.18.2-GA/javassist-3.18.2-GA.jar"/>
  </path>
  
  <path id="library.maven:_org.jdesktop:beansbinding:1.2.1.classpath">
    <pathelement location="${path.variable.maven_repository}/org/jdesktop/beansbinding/1.2.1/beansbinding-1.2.1.jar"/>
  </path>
  
  <path id="library.maven:_org.mockito:mockito-all:1.8.4.classpath">
    <pathelement location="${path.variable.maven_repository}/org/mockito/mockito-all/1.8.4/mockito-all-1.8.4.jar"/>
  </path>
  
  <path id="library.maven:_org.objenesis:objenesis:2.1.classpath">
    <pathelement location="${path.variable.maven_repository}/org/objenesis/objenesis/2.1/objenesis-2.1.jar"/>
  </path>
  
  <path id="library.maven:_org.powermock:powermock-api-mockito:1.5.6.classpath">
    <pathelement location="${path.variable.maven_repository}/org/powermock/powermock-api-mockito/1.5.6/powermock-api-mockito-1.5.6.jar"/>
  </path>
  
  <path id="library.maven:_org.powermock:powermock-api-support:1.5.6.classpath">
    <pathelement location="${path.variable.maven_repository}/org/powermock/powermock-api-support/1.5.6/powermock-api-support-1.5.6.jar"/>
  </path>
  
  <path id="library.maven:_org.powermock:powermock-core:1.5.6.classpath">
    <pathelement location="${path.variable.maven_repository}/org/powermock/powermock-core/1.5.6/powermock-core-1.5.6.jar"/>
  </path>
  
  <path id="library.maven:_org.powermock:powermock-reflect:1.5.6.classpath">
    <pathelement location="${path.variable.maven_repository}/org/powermock/powermock-reflect/1.5.6/powermock-reflect-1.5.6.jar"/>
  </path>
  
  <path id="library.maven:_uk.co.caprica:vlcj:2.4.0.classpath">
    <pathelement location="${path.variable.maven_repository}/uk/co/caprica/vlcj/2.4.0/vlcj-2.4.0.jar"/>
  </path>
  
  
  <!-- Global Libraries -->
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <pathelement location="${javac2.home}/javac2.jar"/>
    <pathelement location="${javac2.home}/jdom.jar"/>
    <pathelement location="${javac2.home}/asm-all.jar"/>
    <pathelement location="${javac2.home}/jgoodies-forms.jar"/>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  <import file="${basedir}/module_lince.xml"/>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.lince" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.lince" description="build all modules"/>
  
  <target name="all" depends="build.modules" description="build all"/>
</project>